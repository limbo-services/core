// Code generated by protoc-gen-gogo.
// source: limbo.services/core/runtime/limbo/http.proto
// DO NOT EDIT!

package limbo

import proto "limbo.services/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "limbo.services/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type HttpRule struct {
	Paged        bool        `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize     uint32      `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Tags         []string    `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
	Alternatives []*HttpRule `protobuf:"bytes,200,rep,name=alternatives" json:"alternatives,omitempty"`
	// Types that are valid to be assigned to Pattern:
	//	*HttpRule_Get
	//	*HttpRule_Post
	//	*HttpRule_Patch
	//	*HttpRule_Put
	//	*HttpRule_Delete
	Pattern isHttpRule_Pattern `protobuf_oneof:"pattern"`
}

func (m *HttpRule) Reset()                    { *m = HttpRule{} }
func (m *HttpRule) String() string            { return proto.CompactTextString(m) }
func (*HttpRule) ProtoMessage()               {}
func (*HttpRule) Descriptor() ([]byte, []int) { return fileDescriptorHttp, []int{0} }

type isHttpRule_Pattern interface {
	isHttpRule_Pattern()
}

type HttpRule_Get struct {
	Get string `protobuf:"bytes,101,opt,name=get,proto3,oneof"`
}
type HttpRule_Post struct {
	Post string `protobuf:"bytes,102,opt,name=post,proto3,oneof"`
}
type HttpRule_Patch struct {
	Patch string `protobuf:"bytes,103,opt,name=patch,proto3,oneof"`
}
type HttpRule_Put struct {
	Put string `protobuf:"bytes,104,opt,name=put,proto3,oneof"`
}
type HttpRule_Delete struct {
	Delete string `protobuf:"bytes,105,opt,name=delete,proto3,oneof"`
}

func (*HttpRule_Get) isHttpRule_Pattern()    {}
func (*HttpRule_Post) isHttpRule_Pattern()   {}
func (*HttpRule_Patch) isHttpRule_Pattern()  {}
func (*HttpRule_Put) isHttpRule_Pattern()    {}
func (*HttpRule_Delete) isHttpRule_Pattern() {}

func (m *HttpRule) GetPattern() isHttpRule_Pattern {
	if m != nil {
		return m.Pattern
	}
	return nil
}

func (m *HttpRule) GetAlternatives() []*HttpRule {
	if m != nil {
		return m.Alternatives
	}
	return nil
}

func (m *HttpRule) GetGet() string {
	if x, ok := m.GetPattern().(*HttpRule_Get); ok {
		return x.Get
	}
	return ""
}

func (m *HttpRule) GetPost() string {
	if x, ok := m.GetPattern().(*HttpRule_Post); ok {
		return x.Post
	}
	return ""
}

func (m *HttpRule) GetPatch() string {
	if x, ok := m.GetPattern().(*HttpRule_Patch); ok {
		return x.Patch
	}
	return ""
}

func (m *HttpRule) GetPut() string {
	if x, ok := m.GetPattern().(*HttpRule_Put); ok {
		return x.Put
	}
	return ""
}

func (m *HttpRule) GetDelete() string {
	if x, ok := m.GetPattern().(*HttpRule_Delete); ok {
		return x.Delete
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HttpRule) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HttpRule_OneofMarshaler, _HttpRule_OneofUnmarshaler, _HttpRule_OneofSizer, []interface{}{
		(*HttpRule_Get)(nil),
		(*HttpRule_Post)(nil),
		(*HttpRule_Patch)(nil),
		(*HttpRule_Put)(nil),
		(*HttpRule_Delete)(nil),
	}
}

func _HttpRule_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HttpRule)
	// pattern
	switch x := m.Pattern.(type) {
	case *HttpRule_Get:
		_ = b.EncodeVarint(101<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Get)
	case *HttpRule_Post:
		_ = b.EncodeVarint(102<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Post)
	case *HttpRule_Patch:
		_ = b.EncodeVarint(103<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Patch)
	case *HttpRule_Put:
		_ = b.EncodeVarint(104<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Put)
	case *HttpRule_Delete:
		_ = b.EncodeVarint(105<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Delete)
	case nil:
	default:
		return fmt.Errorf("HttpRule.Pattern has unexpected type %T", x)
	}
	return nil
}

func _HttpRule_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HttpRule)
	switch tag {
	case 101: // pattern.get
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pattern = &HttpRule_Get{x}
		return true, err
	case 102: // pattern.post
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pattern = &HttpRule_Post{x}
		return true, err
	case 103: // pattern.patch
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pattern = &HttpRule_Patch{x}
		return true, err
	case 104: // pattern.put
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pattern = &HttpRule_Put{x}
		return true, err
	case 105: // pattern.delete
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pattern = &HttpRule_Delete{x}
		return true, err
	default:
		return false, nil
	}
}

func _HttpRule_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HttpRule)
	// pattern
	switch x := m.Pattern.(type) {
	case *HttpRule_Get:
		n += proto.SizeVarint(101<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Get)))
		n += len(x.Get)
	case *HttpRule_Post:
		n += proto.SizeVarint(102<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Post)))
		n += len(x.Post)
	case *HttpRule_Patch:
		n += proto.SizeVarint(103<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Patch)))
		n += len(x.Patch)
	case *HttpRule_Put:
		n += proto.SizeVarint(104<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Put)))
		n += len(x.Put)
	case *HttpRule_Delete:
		n += proto.SizeVarint(105<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Delete)))
		n += len(x.Delete)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*HttpRule)(nil), "limbo.HttpRule")
}

var fileDescriptorHttp = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x90, 0xcb, 0x4e, 0xf3, 0x30,
	0x10, 0x85, 0xff, 0x34, 0xbd, 0x24, 0xfe, 0x41, 0x48, 0x16, 0x42, 0xa3, 0xae, 0x2a, 0x56, 0x5d,
	0xa0, 0x44, 0x02, 0x9e, 0xa0, 0xab, 0xae, 0xcd, 0x8e, 0x5d, 0x92, 0x4e, 0x1d, 0x4b, 0x69, 0x6d,
	0xd9, 0x93, 0x2e, 0xd8, 0xf1, 0x76, 0x3c, 0x16, 0xbe, 0xa4, 0x48, 0xb0, 0x9b, 0xef, 0x1c, 0xcf,
	0xf1, 0xd1, 0xb0, 0xa7, 0x41, 0x9d, 0x5a, 0x5d, 0x39, 0xb4, 0x17, 0xd5, 0xa1, 0xab, 0x3b, 0x6d,
	0xb1, 0xb6, 0xe3, 0x99, 0xd4, 0x09, 0xeb, 0xe8, 0xd5, 0x3d, 0x91, 0xa9, 0x8c, 0xd5, 0xa4, 0xf9,
	0x22, 0x2a, 0xeb, 0xbf, 0x4b, 0xd1, 0x6c, 0xc7, 0x63, 0x2d, 0xb5, 0xd4, 0x11, 0xe2, 0x94, 0x96,
	0x1e, 0x3f, 0x67, 0xac, 0xd8, 0xfb, 0x0c, 0x31, 0x0e, 0xc8, 0xef, 0xd9, 0xc2, 0x34, 0x12, 0x0f,
	0x90, 0x6d, 0xb2, 0x6d, 0x21, 0x12, 0xf0, 0x35, 0x2b, 0xc2, 0xf0, 0xa6, 0x3e, 0x10, 0x66, 0xde,
	0xb8, 0x15, 0x3f, 0xcc, 0x39, 0x9b, 0x53, 0x23, 0x1d, 0xe4, 0x9b, 0x7c, 0x5b, 0x8a, 0x38, 0xf3,
	0x57, 0x76, 0xd3, 0x0c, 0x84, 0xf6, 0xdc, 0x90, 0xba, 0xa0, 0x83, 0xaf, 0xcc, 0x9b, 0xff, 0x9f,
	0xef, 0xaa, 0x54, 0xec, 0xfa, 0x9b, 0xf8, 0xf5, 0xca, 0x27, 0xe5, 0x12, 0x09, 0xd0, 0x7f, 0x50,
	0xee, 0xff, 0x89, 0x00, 0xbe, 0xcf, 0xdc, 0x68, 0x47, 0x70, 0x9c, 0xc4, 0x48, 0xfc, 0x21, 0xb4,
	0xa4, 0xae, 0x07, 0x39, 0xc9, 0x09, 0x43, 0x82, 0x19, 0x09, 0xfa, 0x6b, 0x82, 0x07, 0x0e, 0x6c,
	0x79, 0xc0, 0x01, 0x09, 0x41, 0x4d, 0xf2, 0xc4, 0xbb, 0x92, 0xad, 0xfc, 0x5a, 0x28, 0xb0, 0x5b,
	0xbd, 0xa7, 0xd3, 0xb5, 0xcb, 0x78, 0x93, 0x97, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x68, 0x47,
	0xff, 0xeb, 0x78, 0x01, 0x00, 0x00,
}
